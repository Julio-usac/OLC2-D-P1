
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMASMENOSleftPORDIVIDIDOrightUMENOSABS AMP AND AS BOOL BREAK CHAR CLONE COMA CONTINUE CORDER CORIZQ DECIMAL DIS DIVIDIDO DPT ELSE ENTERO F64 FALSE FN FOR FORM I64 ID IF IGUAL IN LEN LET LLAVEDER LLAVEIZQ LOOP MAIGUAL MAIN MAS MATCH MAYOR MEIGUAL MENOR MENOS MOD MODF MUT NOT OR PARDER PARIZQ POR POW POWF PRINT PT PTCOMA PUB RETURN SQRT STR STRING STRUCT TOOWNED TOSTRING TRUE USIZE VEC VECM WHILEfunciones    : funcion  funciones \n                    | funcion funcion  : PUB FN ID PARIZQ parametros PARDER tipofun LLAVEIZQ instrucciones LLAVEDER\n                | FN ID PARIZQ parametros PARDER tipofun LLAVEIZQ instrucciones LLAVEDER\n                | PUB MODF ID LLAVEIZQ funciones LLAVEDER\n                | MODF ID LLAVEIZQ funciones LLAVEDER\n                | FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER\n                | STRUCT ID LLAVEIZQ liststruct LLAVEDERparametros   : parametros2  \n                    | empty parametros2  : parametros2 COMA mutable ID DPT tipos\n                    | mutable ID DPT tipos  liststruct : liststruct COMA ID DPT tipos \n                | ID DPT tipos tipofun : MENOS MAYOR tipos \n                | empty instrucciones    : instruccion instrucciones  \n                        | instruccion instruccion  : LET mutable ID pyc arrtipos IGUAL logica PTCOMA\n                    | ID listarreglo IGUAL logica PTCOMA\n                    | ID PARIZQ listexpr PARDER PTCOMA\n                    | PRINT NOT PARIZQ listexpr PARDER PTCOMA\n                    | IF logica LLAVEIZQ instrucciones LLAVEDER unelse\n                    | LOOP LLAVEIZQ instrucciones LLAVEDER\n                    | BREAK logica PTCOMA\n                    | BREAK PTCOMA\n                    | RETURN logica PTCOMA\n                    | CONTINUE PTCOMA\n                    | WHILE logica LLAVEIZQ instrucciones LLAVEDER\n                    | FOR ID IN opcionfor LLAVEIZQ instrucciones LLAVEDERopcionfor    : logica\n                    | ENTERO PT PT logica\n                    | empty unelse   : ELSE LLAVEIZQ instrucciones LLAVEDER\n                | ELSE IF logica LLAVEIZQ instrucciones LLAVEDER unelse\n                | empty logica   : logica AND logica\n                | logica OR logica\n                | NOT logica\n                | relrel  : rel IGUAL IGUAL rel\n            | rel MENOR rel\n            | rel MAYOR rel\n            | rel MEIGUAL rel\n            | rel MAIGUAL rel\n            | rel DIS rel\n            | expresionmutable  : MUT  \n                | empty pyc  : DPT  \n            | empty arrtipos : tipos\n                | arreglos\n                | empty vectores : tipos\n                | arreglos\n                | empty arreglos : CORIZQ arreglos PTCOMA ENTERO CORDER\n                | tipos\n                | IDtipos    : I64\n                | F64\n                | BOOL\n                | CHAR\n                | STRING\n                | AMP STR\n                | USIZEexpresion : expresion MAS expresion\n                  | expresion MENOS expresion\n                  | expresion POR expresion\n                  | expresion DIVIDIDO expresion\n                  | expresion MOD expresion\n                  | expresion AS  tiposexpresion : MENOS expresion %prec UMENOSexpresion : PARIZQ logica PARDERexpresion    : ENTERO\n                    | DECIMAL\n                    | FORM\n                    | TRUE\n                    | FALSE\n                    | VECM NOT listarreglo\n                    | ID listarreglo\n                    | ID PARIZQ listexpr PARDER\n                    | listarregloexpresion    : opcionpow DPT DPT expresionopcionpow    : expresion\n                    | tiposexpresion    : POW PARIZQ ENTERO COMA ENTERO PARDER\n                    | POWF PARIZQ DECIMAL COMA DECIMAL PARDERexpresion    : LOOP LLAVEIZQ instrucciones LLAVEDERexpresion    : expresion PT TOSTRING PARIZQ PARDER\n                    | expresion PT SQRT PARIZQ PARDER\n                    | expresion PT ABS PARIZQ PARDER\n                    | expresion PT CLONE PARIZQ PARDER\n                    | expresion PT LEN PARIZQ PARDER\n                    | expresion PT TOOWNED PARIZQ PARDERlistarreglo  : listarreglo CORIZQ listexpr CORDER\n                    | empty listexpr : listexpr COMA expresion\n                | expresionempty :'
    
_lr_action_items = {'PUB':([0,2,18,21,37,39,42,75,153,197,],[3,3,3,3,-6,-8,-5,-7,-4,-3,]),'FN':([0,2,3,18,21,37,39,42,75,153,197,],[4,4,8,4,4,-6,-8,-5,-7,-4,-3,]),'MODF':([0,2,3,18,21,37,39,42,75,153,197,],[5,5,9,5,5,-6,-8,-5,-7,-4,-3,]),'STRUCT':([0,2,18,21,37,39,42,75,153,197,],[6,6,6,6,-6,-8,-5,-7,-4,-3,]),'$end':([1,2,7,37,39,42,75,153,197,],[0,-2,-1,-6,-8,-5,-7,-4,-3,]),'LLAVEDER':([2,7,28,30,32,37,39,42,49,50,61,62,63,64,65,66,68,75,76,103,105,108,111,146,147,148,151,152,153,163,190,191,192,197,204,206,209,222,228,229,231,240,248,250,252,255,257,258,259,],[-2,-1,37,39,42,-6,-8,-5,75,-18,-14,-61,-62,-63,-64,-65,-67,-7,-17,-26,-28,-66,153,191,-25,-27,-13,197,-4,209,221,-24,222,-3,-20,-21,-101,-29,-22,-23,-36,248,-30,-19,255,-34,258,-101,-35,]),'ID':([4,5,6,8,9,16,19,20,24,25,26,34,36,40,46,47,50,51,54,56,57,59,60,71,77,79,83,86,88,101,103,105,110,114,115,116,119,120,121,122,125,126,127,128,129,130,131,132,133,134,141,145,147,148,149,150,155,156,157,161,166,187,191,203,204,206,209,222,223,225,228,229,231,241,244,245,248,250,255,256,258,259,],[10,12,13,14,15,-101,29,-101,-49,35,-48,-101,52,69,73,-49,52,-101,96,96,96,96,107,52,114,96,96,96,96,52,-26,-28,52,-101,96,96,96,52,96,96,96,96,96,96,96,96,96,96,96,96,96,52,-25,-27,52,96,198,-50,-51,96,96,96,-24,198,-20,-21,-101,-29,52,96,-22,-23,-36,96,52,96,-30,-19,-34,52,-101,-35,]),'MAIN':([4,],[11,]),'PARIZQ':([10,11,14,52,54,56,57,59,79,81,83,86,88,96,98,99,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,141,150,161,166,178,179,180,181,182,183,187,225,241,245,],[16,17,20,79,88,88,88,88,88,119,88,88,88,141,143,144,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,211,212,213,214,215,216,88,88,88,88,]),'LLAVEIZQ':([12,13,15,27,33,41,43,45,54,55,59,62,63,64,65,66,68,70,80,82,83,84,85,86,89,90,91,92,93,95,96,100,106,108,112,121,122,123,125,126,127,128,129,130,131,132,133,134,137,139,140,150,164,165,166,167,168,169,170,171,172,173,174,175,176,177,184,185,187,193,194,195,196,205,210,217,218,221,230,232,233,234,235,236,237,241,245,246,247,249,253,],[18,19,21,36,-101,-101,71,-16,-101,101,-101,-61,-62,-63,-64,-65,-67,110,-98,120,-101,-40,-47,-101,-76,-77,-78,-79,-80,-84,-101,145,149,-66,-15,-101,-101,-39,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-74,-101,-82,-101,-37,-38,-101,-42,-43,-44,-45,-46,-68,-69,-70,-71,-72,-73,-75,-81,-101,223,-31,-76,-33,-97,-41,-83,-85,-90,244,-91,-92,-93,-94,-95,-96,-101,-101,-88,-89,-32,256,]),'PARDER':([16,17,20,22,23,24,31,62,63,64,65,66,68,74,79,80,83,84,85,86,88,89,90,91,92,93,95,96,108,117,118,119,121,122,123,125,126,127,128,129,130,131,132,133,134,137,138,139,140,141,154,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,184,185,186,187,205,207,210,211,212,213,214,215,216,217,218,221,232,233,234,235,236,237,238,239,246,247,],[-101,27,-101,33,-9,-10,41,-61,-62,-63,-64,-65,-67,-12,-101,-98,-101,-40,-47,-101,-101,-76,-77,-78,-79,-80,-84,-101,-66,160,-100,-101,-101,-101,-39,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-74,184,-101,-82,-101,-11,-101,208,-37,-38,-101,-42,-43,-44,-45,-46,-68,-69,-70,-71,-72,-73,-75,-81,217,-101,-97,-99,-41,232,233,234,235,236,237,-83,-85,-90,-91,-92,-93,-94,-95,-96,246,247,-88,-89,]),'MUT':([16,20,34,51,],[26,26,26,26,]),'COMA':([23,30,61,62,63,64,65,66,68,74,79,80,86,89,90,91,92,93,95,96,108,116,117,118,119,130,131,132,133,134,137,139,140,141,151,154,159,161,162,172,173,174,175,176,177,184,185,186,187,188,189,205,207,217,218,221,232,233,234,235,236,237,246,247,],[34,40,-14,-61,-62,-63,-64,-65,-67,-12,-101,-98,-101,-76,-77,-78,-79,-80,-84,-101,-66,-101,161,-100,-101,-101,-101,-101,-101,-101,-74,-101,-82,-101,-13,-11,161,-101,161,-68,-69,-70,-71,-72,-73,-75,-81,161,-101,219,220,-97,-99,-83,-85,-90,-91,-92,-93,-94,-95,-96,-88,-89,]),'DPT':([29,35,54,56,57,59,62,63,64,65,66,68,69,73,79,80,83,85,86,87,88,89,90,91,92,93,95,96,97,108,114,115,116,118,119,121,122,125,126,127,128,129,130,131,132,133,134,137,139,140,141,142,150,161,166,172,173,174,175,176,177,184,185,187,195,196,205,207,217,218,221,225,232,233,234,235,236,237,241,245,246,247,],[38,48,-101,-101,-101,-101,-61,-62,-63,-64,-65,-67,109,113,-101,-98,-101,-86,-101,-87,-101,-76,-77,-78,-79,-80,-84,-101,142,-66,156,-101,-101,-86,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-74,-101,-82,-101,187,-101,-101,-101,-68,-69,-70,-71,-72,-73,-75,-81,-101,-76,-98,-97,-86,-83,-85,-90,-101,-91,-92,-93,-94,-95,-96,-101,-101,-88,-89,]),'MENOS':([33,41,54,56,57,59,62,63,64,65,66,68,79,80,83,85,86,88,89,90,91,92,93,95,96,108,115,116,118,119,121,122,125,126,127,128,129,130,131,132,133,134,137,139,140,141,150,161,166,172,173,174,175,176,177,184,185,187,195,196,205,207,217,218,221,225,232,233,234,235,236,237,241,245,246,247,],[44,44,86,86,86,86,-61,-62,-63,-64,-65,-67,86,-98,86,131,86,86,-76,-77,-78,-79,-80,-84,-101,-66,86,86,131,86,86,86,86,86,86,86,86,86,86,86,86,86,-74,-101,-82,86,86,86,86,-68,-69,-70,-71,131,-73,-75,-81,86,-76,-98,-97,131,-83,131,-90,86,-91,-92,-93,-94,-95,-96,86,86,-88,-89,]),'LET':([36,50,71,101,103,105,110,120,145,147,148,149,191,204,206,209,222,223,228,229,231,244,248,250,255,256,258,259,],[51,51,51,51,-26,-28,51,51,51,-25,-27,51,-24,-20,-21,-101,-29,51,-22,-23,-36,51,-30,-19,-34,51,-101,-35,]),'PRINT':([36,50,71,101,103,105,110,120,145,147,148,149,191,204,206,209,222,223,228,229,231,244,248,250,255,256,258,259,],[53,53,53,53,-26,-28,53,53,53,-25,-27,53,-24,-20,-21,-101,-29,53,-22,-23,-36,53,-30,-19,-34,53,-101,-35,]),'IF':([36,50,71,101,103,105,110,120,145,147,148,149,191,204,206,209,222,223,228,229,230,231,244,248,250,255,256,258,259,],[54,54,54,54,-26,-28,54,54,54,-25,-27,54,-24,-20,-21,-101,-29,54,-22,-23,245,-36,54,-30,-19,-34,54,-101,-35,]),'LOOP':([36,50,54,56,57,59,71,79,83,86,88,101,103,105,110,115,116,119,120,121,122,125,126,127,128,129,130,131,132,133,134,141,145,147,148,149,150,161,166,187,191,204,206,209,222,223,225,228,229,231,241,244,245,248,250,255,256,258,259,],[55,55,100,100,100,100,55,100,100,100,100,55,-26,-28,55,100,100,100,55,100,100,100,100,100,100,100,100,100,100,100,100,100,55,-25,-27,55,100,100,100,100,-24,-20,-21,-101,-29,55,100,-22,-23,-36,100,55,100,-30,-19,-34,55,-101,-35,]),'BREAK':([36,50,71,101,103,105,110,120,145,147,148,149,191,204,206,209,222,223,228,229,231,244,248,250,255,256,258,259,],[56,56,56,56,-26,-28,56,56,56,-25,-27,56,-24,-20,-21,-101,-29,56,-22,-23,-36,56,-30,-19,-34,56,-101,-35,]),'RETURN':([36,50,71,101,103,105,110,120,145,147,148,149,191,204,206,209,222,223,228,229,231,244,248,250,255,256,258,259,],[57,57,57,57,-26,-28,57,57,57,-25,-27,57,-24,-20,-21,-101,-29,57,-22,-23,-36,57,-30,-19,-34,57,-101,-35,]),'CONTINUE':([36,50,71,101,103,105,110,120,145,147,148,149,191,204,206,209,222,223,228,229,231,244,248,250,255,256,258,259,],[58,58,58,58,-26,-28,58,58,58,-25,-27,58,-24,-20,-21,-101,-29,58,-22,-23,-36,58,-30,-19,-34,58,-101,-35,]),'WHILE':([36,50,71,101,103,105,110,120,145,147,148,149,191,204,206,209,222,223,228,229,231,244,248,250,255,256,258,259,],[59,59,59,59,-26,-28,59,59,59,-25,-27,59,-24,-20,-21,-101,-29,59,-22,-23,-36,59,-30,-19,-34,59,-101,-35,]),'FOR':([36,50,71,101,103,105,110,120,145,147,148,149,191,204,206,209,222,223,228,229,231,244,248,250,255,256,258,259,],[60,60,60,60,-26,-28,60,60,60,-25,-27,60,-24,-20,-21,-101,-29,60,-22,-23,-36,60,-30,-19,-34,60,-101,-35,]),'I64':([38,48,54,56,57,59,72,79,83,86,88,109,113,114,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,135,141,150,155,156,157,161,166,187,203,225,241,245,],[62,62,62,62,62,62,62,62,62,62,62,62,62,-101,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-50,-51,62,62,62,62,62,62,62,]),'F64':([38,48,54,56,57,59,72,79,83,86,88,109,113,114,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,135,141,150,155,156,157,161,166,187,203,225,241,245,],[63,63,63,63,63,63,63,63,63,63,63,63,63,-101,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-50,-51,63,63,63,63,63,63,63,]),'BOOL':([38,48,54,56,57,59,72,79,83,86,88,109,113,114,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,135,141,150,155,156,157,161,166,187,203,225,241,245,],[64,64,64,64,64,64,64,64,64,64,64,64,64,-101,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-50,-51,64,64,64,64,64,64,64,]),'CHAR':([38,48,54,56,57,59,72,79,83,86,88,109,113,114,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,135,141,150,155,156,157,161,166,187,203,225,241,245,],[65,65,65,65,65,65,65,65,65,65,65,65,65,-101,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-50,-51,65,65,65,65,65,65,65,]),'STRING':([38,48,54,56,57,59,72,79,83,86,88,109,113,114,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,135,141,150,155,156,157,161,166,187,203,225,241,245,],[66,66,66,66,66,66,66,66,66,66,66,66,66,-101,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-50,-51,66,66,66,66,66,66,66,]),'AMP':([38,48,54,56,57,59,72,79,83,86,88,109,113,114,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,135,141,150,155,156,157,161,166,187,203,225,241,245,],[67,67,67,67,67,67,67,67,67,67,67,67,67,-101,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-50,-51,67,67,67,67,67,67,67,]),'USIZE':([38,48,54,56,57,59,72,79,83,86,88,109,113,114,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,135,141,150,155,156,157,161,166,187,203,225,241,245,],[68,68,68,68,68,68,68,68,68,68,68,68,68,-101,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-50,-51,68,68,68,68,68,68,68,]),'MAYOR':([44,54,56,57,59,62,63,64,65,66,68,80,83,84,85,86,88,89,90,91,92,93,95,96,108,115,121,122,125,126,127,128,129,130,131,132,133,134,137,139,140,150,166,167,168,169,170,171,172,173,174,175,176,177,184,185,187,195,196,205,210,217,218,221,225,232,233,234,235,236,237,241,245,246,247,],[72,-101,-101,-101,-101,-61,-62,-63,-64,-65,-67,-98,-101,126,-47,-101,-101,-76,-77,-78,-79,-80,-84,-101,-66,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-74,-101,-82,-101,-101,126,126,126,126,126,-68,-69,-70,-71,-72,-73,-75,-81,-101,-76,-98,-97,126,-83,-85,-90,-101,-91,-92,-93,-94,-95,-96,-101,-101,-88,-89,]),'IGUAL':([52,54,56,57,59,62,63,64,65,66,68,78,80,83,84,85,86,88,89,90,91,92,93,95,96,108,114,115,121,122,124,125,126,127,128,129,130,131,132,133,134,137,139,140,150,155,156,157,166,167,168,169,170,171,172,173,174,175,176,177,184,185,187,195,196,198,199,200,201,202,205,210,217,218,221,225,232,233,234,235,236,237,241,245,246,247,254,],[-101,-101,-101,-101,-101,-61,-62,-63,-64,-65,-67,115,-98,-101,124,-47,-101,-101,-76,-77,-78,-79,-80,-84,-101,-66,-101,-101,-101,-101,166,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-74,-101,-82,-101,-101,-50,-51,-101,124,124,124,124,124,-68,-69,-70,-71,-72,-73,-75,-81,-101,-76,-98,-60,225,-52,-53,-54,-97,124,-83,-85,-90,-101,-91,-92,-93,-94,-95,-96,-101,-101,-88,-89,-58,]),'CORIZQ':([52,54,56,57,59,78,79,80,83,86,88,95,96,114,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,139,140,141,150,155,156,157,161,166,185,187,196,203,205,225,241,245,],[-101,-101,-101,-101,-101,116,-101,-98,-101,-101,-101,116,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,116,-101,-101,203,-50,-51,-101,-101,116,-101,-98,203,-97,-101,-101,-101,]),'NOT':([53,54,56,57,59,83,88,94,115,121,122,150,225,241,245,],[81,83,83,83,83,83,83,139,83,83,83,83,83,83,83,]),'ENTERO':([54,56,57,59,79,83,86,88,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,141,143,150,161,166,187,219,225,241,243,245,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,188,195,89,89,89,238,89,89,251,89,]),'DECIMAL':([54,56,57,59,79,83,86,88,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,141,144,150,161,166,187,220,225,241,245,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,189,90,90,90,90,239,90,90,90,]),'FORM':([54,56,57,59,79,83,86,88,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,141,150,161,166,187,225,241,245,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'TRUE':([54,56,57,59,79,83,86,88,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,141,150,161,166,187,225,241,245,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'FALSE':([54,56,57,59,79,83,86,88,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,141,150,161,166,187,225,241,245,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'VECM':([54,56,57,59,79,83,86,88,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,141,150,161,166,187,225,241,245,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'POW':([54,56,57,59,79,83,86,88,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,141,150,161,166,187,225,241,245,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'POWF':([54,56,57,59,79,83,86,88,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,141,150,161,166,187,225,241,245,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'MAS':([54,56,57,59,62,63,64,65,66,68,79,80,83,85,86,88,89,90,91,92,93,95,96,108,115,116,118,119,121,122,125,126,127,128,129,130,131,132,133,134,137,139,140,141,150,161,166,172,173,174,175,176,177,184,185,187,195,196,205,207,217,218,221,225,232,233,234,235,236,237,241,245,246,247,],[-101,-101,-101,-101,-61,-62,-63,-64,-65,-67,-101,-98,-101,130,-101,-101,-76,-77,-78,-79,-80,-84,-101,-66,-101,-101,130,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-74,-101,-82,-101,-101,-101,-101,-68,-69,-70,-71,130,-73,-75,-81,-101,-76,-98,-97,130,-83,130,-90,-101,-91,-92,-93,-94,-95,-96,-101,-101,-88,-89,]),'POR':([54,56,57,59,62,63,64,65,66,68,79,80,83,85,86,88,89,90,91,92,93,95,96,108,115,116,118,119,121,122,125,126,127,128,129,130,131,132,133,134,137,139,140,141,150,161,166,172,173,174,175,176,177,184,185,187,195,196,205,207,217,218,221,225,232,233,234,235,236,237,241,245,246,247,],[-101,-101,-101,-101,-61,-62,-63,-64,-65,-67,-101,-98,-101,132,-101,-101,-76,-77,-78,-79,-80,-84,-101,-66,-101,-101,132,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-74,-101,-82,-101,-101,-101,-101,132,132,-70,-71,132,-73,-75,-81,-101,-76,-98,-97,132,-83,132,-90,-101,-91,-92,-93,-94,-95,-96,-101,-101,-88,-89,]),'DIVIDIDO':([54,56,57,59,62,63,64,65,66,68,79,80,83,85,86,88,89,90,91,92,93,95,96,108,115,116,118,119,121,122,125,126,127,128,129,130,131,132,133,134,137,139,140,141,150,161,166,172,173,174,175,176,177,184,185,187,195,196,205,207,217,218,221,225,232,233,234,235,236,237,241,245,246,247,],[-101,-101,-101,-101,-61,-62,-63,-64,-65,-67,-101,-98,-101,133,-101,-101,-76,-77,-78,-79,-80,-84,-101,-66,-101,-101,133,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-74,-101,-82,-101,-101,-101,-101,133,133,-70,-71,133,-73,-75,-81,-101,-76,-98,-97,133,-83,133,-90,-101,-91,-92,-93,-94,-95,-96,-101,-101,-88,-89,]),'MOD':([54,56,57,59,62,63,64,65,66,68,79,80,83,85,86,88,89,90,91,92,93,95,96,108,115,116,118,119,121,122,125,126,127,128,129,130,131,132,133,134,137,139,140,141,150,161,166,172,173,174,175,176,177,184,185,187,195,196,205,207,217,218,221,225,232,233,234,235,236,237,241,245,246,247,],[-101,-101,-101,-101,-61,-62,-63,-64,-65,-67,-101,-98,-101,134,-101,-101,-76,-77,-78,-79,-80,-84,-101,-66,-101,-101,134,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-74,-101,-82,-101,-101,-101,-101,-68,-69,-70,-71,134,-73,-75,-81,-101,-76,-98,-97,134,-83,134,-90,-101,-91,-92,-93,-94,-95,-96,-101,-101,-88,-89,]),'AS':([54,56,57,59,62,63,64,65,66,68,79,80,83,85,86,88,89,90,91,92,93,95,96,108,115,116,118,119,121,122,125,126,127,128,129,130,131,132,133,134,137,139,140,141,150,161,166,172,173,174,175,176,177,184,185,187,195,196,205,207,217,218,221,225,232,233,234,235,236,237,241,245,246,247,],[-101,-101,-101,-101,-61,-62,-63,-64,-65,-67,-101,-98,-101,135,-101,-101,-76,-77,-78,-79,-80,-84,-101,-66,-101,-101,135,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-74,-101,-82,-101,-101,-101,-101,-68,-69,-70,-71,135,-73,-75,-81,-101,-76,-98,-97,135,-83,135,-90,-101,-91,-92,-93,-94,-95,-96,-101,-101,-88,-89,]),'PT':([54,56,57,59,62,63,64,65,66,68,79,80,83,85,86,88,89,90,91,92,93,95,96,108,115,116,118,119,121,122,125,126,127,128,129,130,131,132,133,134,137,139,140,141,150,161,166,172,173,174,175,176,177,184,185,187,195,196,205,207,217,218,221,224,225,232,233,234,235,236,237,241,245,246,247,],[-101,-101,-101,-101,-61,-62,-63,-64,-65,-67,-101,-98,-101,136,-101,-101,-76,-77,-78,-79,-80,-84,-101,-66,-101,-101,136,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-74,-101,-82,-101,-101,-101,-101,-68,-69,-70,-71,136,-73,-75,-81,-101,224,-98,-97,136,-83,136,-90,241,-101,-91,-92,-93,-94,-95,-96,-101,-101,-88,-89,]),'MENOR':([54,56,57,59,62,63,64,65,66,68,80,83,84,85,86,88,89,90,91,92,93,95,96,108,115,121,122,125,126,127,128,129,130,131,132,133,134,137,139,140,150,166,167,168,169,170,171,172,173,174,175,176,177,184,185,187,195,196,205,210,217,218,221,225,232,233,234,235,236,237,241,245,246,247,],[-101,-101,-101,-101,-61,-62,-63,-64,-65,-67,-98,-101,125,-47,-101,-101,-76,-77,-78,-79,-80,-84,-101,-66,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-74,-101,-82,-101,-101,125,125,125,125,125,-68,-69,-70,-71,-72,-73,-75,-81,-101,-76,-98,-97,125,-83,-85,-90,-101,-91,-92,-93,-94,-95,-96,-101,-101,-88,-89,]),'MEIGUAL':([54,56,57,59,62,63,64,65,66,68,80,83,84,85,86,88,89,90,91,92,93,95,96,108,115,121,122,125,126,127,128,129,130,131,132,133,134,137,139,140,150,166,167,168,169,170,171,172,173,174,175,176,177,184,185,187,195,196,205,210,217,218,221,225,232,233,234,235,236,237,241,245,246,247,],[-101,-101,-101,-101,-61,-62,-63,-64,-65,-67,-98,-101,127,-47,-101,-101,-76,-77,-78,-79,-80,-84,-101,-66,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-74,-101,-82,-101,-101,127,127,127,127,127,-68,-69,-70,-71,-72,-73,-75,-81,-101,-76,-98,-97,127,-83,-85,-90,-101,-91,-92,-93,-94,-95,-96,-101,-101,-88,-89,]),'MAIGUAL':([54,56,57,59,62,63,64,65,66,68,80,83,84,85,86,88,89,90,91,92,93,95,96,108,115,121,122,125,126,127,128,129,130,131,132,133,134,137,139,140,150,166,167,168,169,170,171,172,173,174,175,176,177,184,185,187,195,196,205,210,217,218,221,225,232,233,234,235,236,237,241,245,246,247,],[-101,-101,-101,-101,-61,-62,-63,-64,-65,-67,-98,-101,128,-47,-101,-101,-76,-77,-78,-79,-80,-84,-101,-66,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-74,-101,-82,-101,-101,128,128,128,128,128,-68,-69,-70,-71,-72,-73,-75,-81,-101,-76,-98,-97,128,-83,-85,-90,-101,-91,-92,-93,-94,-95,-96,-101,-101,-88,-89,]),'DIS':([54,56,57,59,62,63,64,65,66,68,80,83,84,85,86,88,89,90,91,92,93,95,96,108,115,121,122,125,126,127,128,129,130,131,132,133,134,137,139,140,150,166,167,168,169,170,171,172,173,174,175,176,177,184,185,187,195,196,205,210,217,218,221,225,232,233,234,235,236,237,241,245,246,247,],[-101,-101,-101,-101,-61,-62,-63,-64,-65,-67,-98,-101,129,-47,-101,-101,-76,-77,-78,-79,-80,-84,-101,-66,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-74,-101,-82,-101,-101,129,129,129,129,129,-68,-69,-70,-71,-72,-73,-75,-81,-101,-76,-98,-97,129,-83,-85,-90,-101,-91,-92,-93,-94,-95,-96,-101,-101,-88,-89,]),'AND':([54,56,57,59,62,63,64,65,66,68,80,82,83,84,85,86,88,89,90,91,92,93,95,96,102,104,106,108,115,121,122,123,125,126,127,128,129,130,131,132,133,134,137,138,139,140,150,158,164,165,166,167,168,169,170,171,172,173,174,175,176,177,184,185,187,194,195,196,205,210,217,218,221,225,232,233,234,235,236,237,241,242,245,246,247,249,253,],[-101,-101,-101,-101,-61,-62,-63,-64,-65,-67,-98,121,-101,-40,-47,-101,-101,-76,-77,-78,-79,-80,-84,-101,121,121,121,-66,-101,-101,-101,121,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-74,121,-101,-82,-101,121,121,121,-101,-42,-43,-44,-45,-46,-68,-69,-70,-71,-72,-73,-75,-81,-101,121,-76,-98,-97,-41,-83,-85,-90,-101,-91,-92,-93,-94,-95,-96,-101,121,-101,-88,-89,121,121,]),'OR':([54,56,57,59,62,63,64,65,66,68,80,82,83,84,85,86,88,89,90,91,92,93,95,96,102,104,106,108,115,121,122,123,125,126,127,128,129,130,131,132,133,134,137,138,139,140,150,158,164,165,166,167,168,169,170,171,172,173,174,175,176,177,184,185,187,194,195,196,205,210,217,218,221,225,232,233,234,235,236,237,241,242,245,246,247,249,253,],[-101,-101,-101,-101,-61,-62,-63,-64,-65,-67,-98,122,-101,-40,-47,-101,-101,-76,-77,-78,-79,-80,-84,-101,122,122,122,-66,-101,-101,-101,122,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-74,122,-101,-82,-101,122,122,122,-101,-42,-43,-44,-45,-46,-68,-69,-70,-71,-72,-73,-75,-81,-101,122,-76,-98,-97,-41,-83,-85,-90,-101,-91,-92,-93,-94,-95,-96,-101,122,-101,-88,-89,122,122,]),'PTCOMA':([56,57,58,62,63,64,65,66,68,80,83,84,85,86,89,90,91,92,93,95,96,102,104,108,115,121,122,123,125,126,127,128,129,130,131,132,133,134,137,139,140,158,160,164,165,166,167,168,169,170,171,172,173,174,175,176,177,184,185,187,198,205,208,210,217,218,221,225,226,227,232,233,234,235,236,237,242,246,247,254,],[103,-101,105,-61,-62,-63,-64,-65,-67,-98,-101,-40,-47,-101,-76,-77,-78,-79,-80,-84,-101,147,148,-66,-101,-101,-101,-39,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-74,-101,-82,204,206,-37,-38,-101,-42,-43,-44,-45,-46,-68,-69,-70,-71,-72,-73,-75,-81,-101,-60,-97,228,-41,-83,-85,-90,-101,243,-59,-91,-92,-93,-94,-95,-96,250,-88,-89,-58,]),'CORDER':([62,63,64,65,66,68,80,86,89,90,91,92,93,95,96,108,116,118,130,131,132,133,134,137,139,140,159,161,172,173,174,175,176,177,184,185,187,205,207,217,218,221,232,233,234,235,236,237,246,247,251,],[-61,-62,-63,-64,-65,-67,-98,-101,-76,-77,-78,-79,-80,-84,-101,-66,-101,-100,-101,-101,-101,-101,-101,-74,-101,-82,205,-101,-68,-69,-70,-71,-72,-73,-75,-81,-101,-97,-99,-83,-85,-90,-91,-92,-93,-94,-95,-96,-88,-89,254,]),'STR':([67,],[108,]),'IN':([107,],[150,]),'TOSTRING':([136,],[178,]),'SQRT':([136,],[179,]),'ABS':([136,],[180,]),'CLONE':([136,],[181,]),'LEN':([136,],[182,]),'TOOWNED':([136,],[183,]),'ELSE':([209,258,],[230,230,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'funciones':([0,2,18,21,],[1,7,28,32,]),'funcion':([0,2,18,21,],[2,2,2,2,]),'parametros':([16,20,],[22,31,]),'parametros2':([16,20,],[23,23,]),'empty':([16,20,33,34,41,51,52,54,56,57,59,79,83,86,88,96,114,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,139,141,150,155,161,166,187,209,225,241,245,258,],[24,24,45,47,45,47,80,80,80,80,80,80,80,80,80,80,157,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,196,202,80,80,80,231,80,80,80,231,]),'mutable':([16,20,34,51,],[25,25,46,77,]),'liststruct':([19,],[30,]),'tipofun':([33,41,],[43,70,]),'instrucciones':([36,50,71,101,110,120,145,149,223,244,256,],[49,76,111,146,152,163,190,192,240,252,257,]),'instruccion':([36,50,71,101,110,120,145,149,223,244,256,],[50,50,50,50,50,50,50,50,50,50,50,]),'tipos':([38,48,54,56,57,59,72,79,83,86,88,109,113,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,135,141,150,155,161,166,187,203,225,241,245,],[61,74,87,87,87,87,112,87,87,87,87,151,154,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,177,87,87,200,87,87,87,227,87,87,87,]),'listarreglo':([52,54,56,57,59,79,83,86,88,96,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,139,141,150,161,166,187,225,241,245,],[78,95,95,95,95,95,95,95,95,140,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,185,95,95,95,95,95,95,95,95,]),'logica':([54,56,57,59,83,88,115,121,122,150,225,241,245,],[82,102,104,106,123,138,158,164,165,194,242,249,253,]),'rel':([54,56,57,59,83,88,115,121,122,125,126,127,128,129,150,166,225,241,245,],[84,84,84,84,84,84,84,84,84,167,168,169,170,171,84,210,84,84,84,]),'expresion':([54,56,57,59,79,83,86,88,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,141,150,161,166,187,225,241,245,],[85,85,85,85,118,85,137,85,85,118,118,85,85,85,85,85,85,85,172,173,174,175,176,118,85,207,85,218,85,85,85,]),'opcionpow':([54,56,57,59,79,83,86,88,115,116,119,121,122,125,126,127,128,129,130,131,132,133,134,141,150,161,166,187,225,241,245,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'listexpr':([79,116,119,141,],[117,159,162,186,]),'pyc':([114,],[155,]),'opcionfor':([150,],[193,]),'arrtipos':([155,],[199,]),'arreglos':([155,203,],[201,226,]),'unelse':([209,258,],[229,259,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> funciones","S'",1,None,None,None),
  ('funciones -> funcion funciones','funciones',2,'p_funciones_lista','gramatica2.py',201),
  ('funciones -> funcion','funciones',1,'p_funciones_lista','gramatica2.py',202),
  ('funcion -> PUB FN ID PARIZQ parametros PARDER tipofun LLAVEIZQ instrucciones LLAVEDER','funcion',10,'p_funciones_evaluar','gramatica2.py',211),
  ('funcion -> FN ID PARIZQ parametros PARDER tipofun LLAVEIZQ instrucciones LLAVEDER','funcion',9,'p_funciones_evaluar','gramatica2.py',212),
  ('funcion -> PUB MODF ID LLAVEIZQ funciones LLAVEDER','funcion',6,'p_funciones_evaluar','gramatica2.py',213),
  ('funcion -> MODF ID LLAVEIZQ funciones LLAVEDER','funcion',5,'p_funciones_evaluar','gramatica2.py',214),
  ('funcion -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER','funcion',7,'p_funciones_evaluar','gramatica2.py',215),
  ('funcion -> STRUCT ID LLAVEIZQ liststruct LLAVEDER','funcion',5,'p_funciones_evaluar','gramatica2.py',216),
  ('parametros -> parametros2','parametros',1,'p_parametros','gramatica2.py',225),
  ('parametros -> empty','parametros',1,'p_parametros','gramatica2.py',226),
  ('parametros2 -> parametros2 COMA mutable ID DPT tipos','parametros2',6,'p_parametros2','gramatica2.py',229),
  ('parametros2 -> mutable ID DPT tipos','parametros2',4,'p_parametros2','gramatica2.py',230),
  ('liststruct -> liststruct COMA ID DPT tipos','liststruct',5,'p_liststruct','gramatica2.py',234),
  ('liststruct -> ID DPT tipos','liststruct',3,'p_liststruct','gramatica2.py',235),
  ('tipofun -> MENOS MAYOR tipos','tipofun',3,'p_tipofun','gramatica2.py',238),
  ('tipofun -> empty','tipofun',1,'p_tipofun','gramatica2.py',239),
  ('instrucciones -> instruccion instrucciones','instrucciones',2,'p_instrucciones_lista','gramatica2.py',243),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_lista','gramatica2.py',244),
  ('instruccion -> LET mutable ID pyc arrtipos IGUAL logica PTCOMA','instruccion',8,'p_instruccion','gramatica2.py',253),
  ('instruccion -> ID listarreglo IGUAL logica PTCOMA','instruccion',5,'p_instruccion','gramatica2.py',254),
  ('instruccion -> ID PARIZQ listexpr PARDER PTCOMA','instruccion',5,'p_instruccion','gramatica2.py',255),
  ('instruccion -> PRINT NOT PARIZQ listexpr PARDER PTCOMA','instruccion',6,'p_instruccion','gramatica2.py',256),
  ('instruccion -> IF logica LLAVEIZQ instrucciones LLAVEDER unelse','instruccion',6,'p_instruccion','gramatica2.py',257),
  ('instruccion -> LOOP LLAVEIZQ instrucciones LLAVEDER','instruccion',4,'p_instruccion','gramatica2.py',258),
  ('instruccion -> BREAK logica PTCOMA','instruccion',3,'p_instruccion','gramatica2.py',259),
  ('instruccion -> BREAK PTCOMA','instruccion',2,'p_instruccion','gramatica2.py',260),
  ('instruccion -> RETURN logica PTCOMA','instruccion',3,'p_instruccion','gramatica2.py',261),
  ('instruccion -> CONTINUE PTCOMA','instruccion',2,'p_instruccion','gramatica2.py',262),
  ('instruccion -> WHILE logica LLAVEIZQ instrucciones LLAVEDER','instruccion',5,'p_instruccion','gramatica2.py',263),
  ('instruccion -> FOR ID IN opcionfor LLAVEIZQ instrucciones LLAVEDER','instruccion',7,'p_instruccion','gramatica2.py',264),
  ('opcionfor -> logica','opcionfor',1,'p_opcionfor','gramatica2.py',273),
  ('opcionfor -> ENTERO PT PT logica','opcionfor',4,'p_opcionfor','gramatica2.py',274),
  ('opcionfor -> empty','opcionfor',1,'p_opcionfor','gramatica2.py',275),
  ('unelse -> ELSE LLAVEIZQ instrucciones LLAVEDER','unelse',4,'p_unelse','gramatica2.py',278),
  ('unelse -> ELSE IF logica LLAVEIZQ instrucciones LLAVEDER unelse','unelse',7,'p_unelse','gramatica2.py',279),
  ('unelse -> empty','unelse',1,'p_unelse','gramatica2.py',280),
  ('logica -> logica AND logica','logica',3,'p_logica','gramatica2.py',283),
  ('logica -> logica OR logica','logica',3,'p_logica','gramatica2.py',284),
  ('logica -> NOT logica','logica',2,'p_logica','gramatica2.py',285),
  ('logica -> rel','logica',1,'p_logica','gramatica2.py',286),
  ('rel -> rel IGUAL IGUAL rel','rel',4,'p_rel','gramatica2.py',291),
  ('rel -> rel MENOR rel','rel',3,'p_rel','gramatica2.py',292),
  ('rel -> rel MAYOR rel','rel',3,'p_rel','gramatica2.py',293),
  ('rel -> rel MEIGUAL rel','rel',3,'p_rel','gramatica2.py',294),
  ('rel -> rel MAIGUAL rel','rel',3,'p_rel','gramatica2.py',295),
  ('rel -> rel DIS rel','rel',3,'p_rel','gramatica2.py',296),
  ('rel -> expresion','rel',1,'p_rel','gramatica2.py',297),
  ('mutable -> MUT','mutable',1,'p_mutable','gramatica2.py',302),
  ('mutable -> empty','mutable',1,'p_mutable','gramatica2.py',303),
  ('pyc -> DPT','pyc',1,'p_pyc','gramatica2.py',306),
  ('pyc -> empty','pyc',1,'p_pyc','gramatica2.py',307),
  ('arrtipos -> tipos','arrtipos',1,'p_arrtipos','gramatica2.py',311),
  ('arrtipos -> arreglos','arrtipos',1,'p_arrtipos','gramatica2.py',312),
  ('arrtipos -> empty','arrtipos',1,'p_arrtipos','gramatica2.py',313),
  ('vectores -> tipos','vectores',1,'p_vectores','gramatica2.py',316),
  ('vectores -> arreglos','vectores',1,'p_vectores','gramatica2.py',317),
  ('vectores -> empty','vectores',1,'p_vectores','gramatica2.py',318),
  ('arreglos -> CORIZQ arreglos PTCOMA ENTERO CORDER','arreglos',5,'p_arreglos','gramatica2.py',321),
  ('arreglos -> tipos','arreglos',1,'p_arreglos','gramatica2.py',322),
  ('arreglos -> ID','arreglos',1,'p_arreglos','gramatica2.py',323),
  ('tipos -> I64','tipos',1,'p_tipos','gramatica2.py',326),
  ('tipos -> F64','tipos',1,'p_tipos','gramatica2.py',327),
  ('tipos -> BOOL','tipos',1,'p_tipos','gramatica2.py',328),
  ('tipos -> CHAR','tipos',1,'p_tipos','gramatica2.py',329),
  ('tipos -> STRING','tipos',1,'p_tipos','gramatica2.py',330),
  ('tipos -> AMP STR','tipos',2,'p_tipos','gramatica2.py',331),
  ('tipos -> USIZE','tipos',1,'p_tipos','gramatica2.py',332),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','gramatica2.py',337),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','gramatica2.py',338),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','gramatica2.py',339),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion_binaria','gramatica2.py',340),
  ('expresion -> expresion MOD expresion','expresion',3,'p_expresion_binaria','gramatica2.py',341),
  ('expresion -> expresion AS tipos','expresion',3,'p_expresion_binaria','gramatica2.py',342),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','gramatica2.py',367),
  ('expresion -> PARIZQ logica PARDER','expresion',3,'p_expresion_agrupacion','gramatica2.py',371),
  ('expresion -> ENTERO','expresion',1,'p_expresion_number','gramatica2.py',375),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_number','gramatica2.py',376),
  ('expresion -> FORM','expresion',1,'p_expresion_number','gramatica2.py',377),
  ('expresion -> TRUE','expresion',1,'p_expresion_number','gramatica2.py',378),
  ('expresion -> FALSE','expresion',1,'p_expresion_number','gramatica2.py',379),
  ('expresion -> VECM NOT listarreglo','expresion',3,'p_expresion_number','gramatica2.py',380),
  ('expresion -> ID listarreglo','expresion',2,'p_expresion_number','gramatica2.py',381),
  ('expresion -> ID PARIZQ listexpr PARDER','expresion',4,'p_expresion_number','gramatica2.py',382),
  ('expresion -> listarreglo','expresion',1,'p_expresion_number','gramatica2.py',383),
  ('expresion -> opcionpow DPT DPT expresion','expresion',4,'p_expresion_mod','gramatica2.py',401),
  ('opcionpow -> expresion','opcionpow',1,'p_opcionpow','gramatica2.py',404),
  ('opcionpow -> tipos','opcionpow',1,'p_opcionpow','gramatica2.py',405),
  ('expresion -> POW PARIZQ ENTERO COMA ENTERO PARDER','expresion',6,'p_expresion_pow','gramatica2.py',408),
  ('expresion -> POWF PARIZQ DECIMAL COMA DECIMAL PARDER','expresion',6,'p_expresion_pow','gramatica2.py',409),
  ('expresion -> LOOP LLAVEIZQ instrucciones LLAVEDER','expresion',4,'p_expresion_loop','gramatica2.py',413),
  ('expresion -> expresion PT TOSTRING PARIZQ PARDER','expresion',5,'p_expresion_fnativas','gramatica2.py',417),
  ('expresion -> expresion PT SQRT PARIZQ PARDER','expresion',5,'p_expresion_fnativas','gramatica2.py',418),
  ('expresion -> expresion PT ABS PARIZQ PARDER','expresion',5,'p_expresion_fnativas','gramatica2.py',419),
  ('expresion -> expresion PT CLONE PARIZQ PARDER','expresion',5,'p_expresion_fnativas','gramatica2.py',420),
  ('expresion -> expresion PT LEN PARIZQ PARDER','expresion',5,'p_expresion_fnativas','gramatica2.py',421),
  ('expresion -> expresion PT TOOWNED PARIZQ PARDER','expresion',5,'p_expresion_fnativas','gramatica2.py',422),
  ('listarreglo -> listarreglo CORIZQ listexpr CORDER','listarreglo',4,'p_listarreglo','gramatica2.py',426),
  ('listarreglo -> empty','listarreglo',1,'p_listarreglo','gramatica2.py',427),
  ('listexpr -> listexpr COMA expresion','listexpr',3,'p_listexpr','gramatica2.py',430),
  ('listexpr -> expresion','listexpr',1,'p_listexpr','gramatica2.py',431),
  ('empty -> <empty>','empty',0,'p_empty','gramatica2.py',435),
]
